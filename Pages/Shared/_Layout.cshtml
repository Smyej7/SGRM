@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - SGRM</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/SGRM.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-page="/Index">SGRM</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">

                        @if (SignInManager.IsSignedIn(User))
                        {
                            @if ((await AuthorizationService.AuthorizeAsync(
                               User, new Departement(),
                               RecordOperations.List)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-page="/Departements/Index">Departements</a>
                                </li>
                            }

                            @if ((await AuthorizationService.AuthorizeAsync(
                               User, new Directeur(),
                               RecordOperations.List)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-page="/Directeurs/Index">Directeurs</a>
                                </li>
                            }

                            @if ((await AuthorizationService.AuthorizeAsync(
                               User, new Enseignant(),
                               RecordOperations.List)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-page="/Enseignants/Index">Enseignants</a>
                                </li>
                            }

                            @if ((await AuthorizationService.AuthorizeAsync(
                               User, new Laboratoire(),
                               RecordOperations.List)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-page="/Laboratoires/Index">Laboratoires</a>
                                </li>   
                            }

                            @if ((await AuthorizationService.AuthorizeAsync(
                               User, new Fournisseur(),
                               RecordOperations.List)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-page="/Fournisseurs/Index">Fournisseurs</a>
                                </li>   
                            }

                            @if ((await AuthorizationService.AuthorizeAsync(
                           User, new Ressource(),
                           RecordOperations.List)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-page="/Ressources/Index">Ressources</a>
                                </li>
                            }

                            @if ((await AuthorizationService.AuthorizeAsync(
                               User, new Imprimante(),
                               RecordOperations.List)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-page="/Imprimantes/Index">Imprimantes</a>
                                </li>
                            }

                            @if ((await AuthorizationService.AuthorizeAsync(
                               User, new Ordinateur(),
                               RecordOperations.List)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-page="/Ordinateurs/Index">Ordinateurs</a>
                                </li>
                            }

                            @if ((await AuthorizationService.AuthorizeAsync(
                               User, new Livraison(),
                               RecordOperations.List)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-page="/Livraisons/Index">Livraisons</a>
                                </li>
                            }

                            @if ((await AuthorizationService.AuthorizeAsync(
                               User, new Panne(),
                               RecordOperations.List)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-page="/Pannes/Index">Pannes</a>
                                </li>
                            }

                            @if ((await AuthorizationService.AuthorizeAsync(
                               User, new TypePanne(),
                               RecordOperations.List)).Succeeded)
                            {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-page="/TypePannes/Index">Type Pannes</a>
                            </li>
                            }

                            @if ((await AuthorizationService.AuthorizeAsync(
                               User, new TypeRessource(),
                               RecordOperations.List)).Succeeded)
                            {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-page="/TypeRessources/Index">Type Ressources</a>
                            </li>
                            }
                        }
                    </ul>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">

            @*<p style="">infos : @ViewData["RequestMethod"] | @ViewData["ResponseStatusCode"]</p>*@

            @if (@ViewData["NotificationMessage"] != null)
            {
                <div class="alert alert-danger" role="alert">
                    @ViewData["NotificationMessage"]
                </div>
            }

            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2023 - SGRM - <a asp-area="" asp-page="/Privacy">Privacy</a>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>